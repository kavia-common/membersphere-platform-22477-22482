{"is_source_file": true, "format": "Python", "description": "This file contains FastAPI route definitions for managing subscription entities in a SaaS platform, including creating, renewing, canceling, listing by member or organization, aggregating stats, and exporting subscription data.", "external_files": ["src.api.models", "src.api.schemas", "src.api.auth"], "external_methods": ["get_db (from src.api.auth)"], "published": ["assign_subscription", "renew_subscription", "cancel_subscription", "list_subscriptions_by_member", "list_subscriptions_by_org", "aggregate_subscription_by_org", "export_members_subscription_csv"], "classes": [], "methods": [{"name": "assign_subscription( subscription_in: SubscriptionCreate, db: Session = Depends(get_db), )", "description": "Creates and assigns a new subscription to a member.", "scope": "", "scopeKind": ""}, {"name": "renew_subscription( subscription_id: int, new_end_date: date, db: Session = Depends(get_db), )", "description": "Renews an existing subscription by updating its end date.", "scope": "", "scopeKind": ""}, {"name": "cancel_subscription( subscription_id: int, db: Session = Depends(get_db) )", "description": "Cancels a subscription by changing its status to 'cancelled'.", "scope": "", "scopeKind": ""}, {"name": "list_subscriptions_by_member( member_id: int, db: Session = Depends(get_db) )", "description": "Retrieves all subscriptions associated with a specific member.", "scope": "", "scopeKind": ""}, {"name": "list_subscriptions_by_org( org_id: int, status: Optional[str] = Query(None, description=\"Filter by status\"), db: Session = Depends(get_db) )", "description": "Retrieves all subscriptions for members of a specific organization, optionally filtered by status.", "scope": "", "scopeKind": ""}, {"name": "aggregate_subscription_by_org( org_id: int, db: Session = Depends(get_db) )", "description": "Provides aggregated statistics about subscriptions for an organization.", "scope": "", "scopeKind": ""}, {"name": "export_members_subscription_csv( org_id: int, status: str = Query(..., description=\"Subscription status to export (active, overdue, cancelled, pending)\"), format: str = Query(\"csv\", description=\"Export format: csv or xlsx\"), db: Session = Depends(get_db) )", "description": "Exports subscription data for members of an organization as CSV or XLSX format.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.query(User).filter", "db.query(Subscription).filter", "db.query(Subscription).join", "db.query(Subscription).filter", "csv.DictWriter", "io.StringIO", "StreamingResponse"], "search-terms": ["FastAPI subscriptions endpoints", "subscription management", "member subscription list", "organization subscription stats", "subscription export CSV"], "state": 2, "file_id": 10, "knowledge_revision": 30, "git_revision": "a0f78a1f316743ce56edb970e5db52d2e1b20bb0", "revision_history": [{"26": ""}, {"30": "a0f78a1f316743ce56edb970e5db52d2e1b20bb0"}], "ctags": [{"_type": "tag", "name": "aggregate_subscription_by_org", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def aggregate_subscription_by_org($/", "language": "Python", "kind": "function", "signature": "( org_id: int, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "assign_subscription", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def assign_subscription($/", "language": "Python", "kind": "function", "signature": "( subscription_in: SubscriptionCreate, db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "cancel_subscription", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def cancel_subscription($/", "language": "Python", "kind": "function", "signature": "( subscription_id: int, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "export_members_subscription_csv", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def export_members_subscription_csv($/", "language": "Python", "kind": "function", "signature": "( org_id: int, status: str = Query(..., description=\"Subscription status to export (active, overdue, cancelled, pending)\"), format: str = Query(\"csv\", description=\"Export format: csv or xlsx\"), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_subscriptions_by_member", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def list_subscriptions_by_member($/", "language": "Python", "kind": "function", "signature": "( member_id: int, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_subscriptions_by_org", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def list_subscriptions_by_org($/", "language": "Python", "kind": "function", "signature": "( org_id: int, status: Optional[str] = Query(None, description=\"Filter by status\"), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "renew_subscription", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^def renew_subscription($/", "language": "Python", "kind": "function", "signature": "( subscription_id: int, new_end_date: date, db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/subscriptions.py", "pattern": "/^router = APIRouter(prefix=\"\\/subscriptions\", tags=[\"Subscriptions\"])$/", "language": "Python", "kind": "variable"}], "hash": "072d0ab12bf75fcdb2451275ddafd33c", "format-version": 4, "code-base-name": "membership_backend", "filename": "membership_backend/src/api/subscriptions.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/subscriptions\", tags=[\"Subscriptions\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}