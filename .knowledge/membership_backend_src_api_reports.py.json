{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints related to reporting, exporting, and charting transaction data for a financial application. It includes routes for exporting transaction data as CSV or Excel, generating chart data by category and month, and summarizing overall totals. The code uses FastAPI, SQLAlchemy, and standard Python libraries to implement these functionalities.", "external_files": ["src.api.models", "src.api.auth"], "external_methods": ["get_db", "rbac_required"], "published": ["router"], "classes": [], "methods": [{"name": "export_transactions( account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Filter by category\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Exports filtered transactions as CSV or Excel, protected by RBAC.", "scope": "", "scopeKind": ""}, {"name": "transactions_by_category_chart( year: Optional[int] = Query(None, description=\"Year\"), month: Optional[int] = Query(None, description=\"Month (optional)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Generates chart data of total income and expenses grouped by category, optionally filtered by year and month.", "scope": "", "scopeKind": ""}, {"name": "transactions_monthly_totals_chart( year: Optional[int] = Query(None, description=\"Year (defaults to current year)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Provides monthly totals for income and expenses for a specified or current year.", "scope": "", "scopeKind": ""}, {"name": "transactions_summary_chart( db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Returns overall totals for income and expenses for dashboard summaries.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "func.sum", "extract", "StreamingResponse", "csv.DictWriter", "io.StringIO", "rbac_required"], "search-terms": ["FastAPI reports endpoints", "transaction export CSV Excel", "transactions chart data", "RBAC protected reporting", "SQLAlchemy transaction queries", "monthly totals transactions"], "state": 2, "file_id": 15, "knowledge_revision": 41, "git_revision": "", "ctags": [{"_type": "tag", "name": "export_transactions", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def export_transactions($/", "language": "Python", "kind": "function", "signature": "( account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Filter by category\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^router = APIRouter(prefix=\"\\/reports\", tags=[\"Accounting\", \"Exports\", \"Reports\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "transactions_by_category_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_by_category_chart($/", "language": "Python", "kind": "function", "signature": "( year: Optional[int] = Query(None, description=\"Year\"), month: Optional[int] = Query(None, description=\"Month (optional)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "transactions_monthly_totals_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_monthly_totals_chart($/", "language": "Python", "kind": "function", "signature": "( year: Optional[int] = Query(None, description=\"Year (defaults to current year)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "transactions_summary_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_summary_chart($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}], "hash": "c0f96932e1948bb1dbe735a0f8960014", "format-version": 4, "code-base-name": "membership_backend", "filename": "membership_backend/src/api/reports.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/reports\", tags=[\"Accounting\", \"Exports\", \"Reports\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"41": ""}]}