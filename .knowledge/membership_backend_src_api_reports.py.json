{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for generating transaction reports, including exporting transaction data, and providing chart data summaries. It uses FastAPI for routing, SQLAlchemy for database queries, and handles CSV/Excel export functionality. The endpoints include exporting transactions with filters, and generating data for category, monthly, and overall income/expense charts.", "external_files": ["src.api.models", "src.api.auth"], "external_methods": ["get_db", "rbac_required"], "published": ["router"], "classes": [], "methods": [{"name": "export_transactions( account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Filter by category\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Exports filtered transactions as CSV or Excel file, protected for admins.", "scope": "", "scopeKind": ""}, {"name": "transactions_by_category_chart( year: Optional[int] = Query(None, description=\"Year\"), month: Optional[int] = Query(None, description=\"Month (optional)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Provides aggregated total amounts by category and transaction type for charting.", "scope": "", "scopeKind": ""}, {"name": "transactions_monthly_totals_chart( year: Optional[int] = Query(None, description=\"Year (defaults to current year)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Provides monthly income and expense totals.", "scope": "", "scopeKind": ""}, {"name": "transactions_summary_chart( db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Returns overall income and expense totals for dashboard summary.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.query().filter", "db.query().group_by", "db.query().order_by", "db.query().scalar", "csv.DictWriter", "StreamingResponse"], "search-terms": ["reports.py", "transaction export", "chart data", "group by category", "monthly totals", "summary totals", "CSV export", "SQLAlchemy aggregate", "FastAPI endpoints"], "state": 2, "file_id": 15, "knowledge_revision": 44, "git_revision": "0eaae4a1e1d8149d0139ca01202c9c655fd6f5ab", "revision_history": [{"41": ""}, {"44": "0eaae4a1e1d8149d0139ca01202c9c655fd6f5ab"}], "ctags": [{"_type": "tag", "name": "export_transactions", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def export_transactions($/", "language": "Python", "kind": "function", "signature": "( account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Filter by category\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^router = APIRouter(prefix=\"\\/reports\", tags=[\"Accounting\", \"Exports\", \"Reports\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "transactions_by_category_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_by_category_chart($/", "language": "Python", "kind": "function", "signature": "( year: Optional[int] = Query(None, description=\"Year\"), month: Optional[int] = Query(None, description=\"Month (optional)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "transactions_monthly_totals_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_monthly_totals_chart($/", "language": "Python", "kind": "function", "signature": "( year: Optional[int] = Query(None, description=\"Year (defaults to current year)\"), db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "transactions_summary_chart", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/reports.py", "pattern": "/^def transactions_summary_chart($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}], "hash": "c0f96932e1948bb1dbe735a0f8960014", "format-version": 4, "code-base-name": "membership_backend", "filename": "membership_backend/src/api/reports.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/reports\", tags=[\"Accounting\", \"Exports\", \"Reports\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}