{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing financial transactions (income and expenses) within an accounting module using FastAPI. It includes functions to create, list, retrieve, update, and delete categorized transactions, with role-based access control and filtering by various parameters.", "external_files": ["src.api.models", "src.api.schemas", "src.api.auth"], "external_methods": ["get_db", "get_current_user", "rbac_required"], "published": ["router"], "classes": [{"name": "Transaction", "description": "ORM model representing financial transactions, imported from src.api.models"}, {"name": "User", "description": "User model representing authenticated users, imported from src.api.models"}], "methods": [{"name": "record_transaction( transaction_in: TransactionCreate, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Creates a new transaction record, accessible to admins.", "scope": "", "scopeKind": ""}, {"name": "list_transactions( db: Session = Depends(get_db), account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Category filter\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), skip: int = 0, limit: int = 100, current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\", \"Member\")), )", "description": "Returns a list of transactions, filtered based on query parameters and user role.", "scope": "", "scopeKind": ""}, {"name": "get_transaction( transaction_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Retrieves details of a specific transaction, with access restrictions.", "scope": "", "scopeKind": ""}, {"name": "delete_transaction( transaction_id: int, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Deletes a transaction, restricted to admin roles.", "scope": "", "scopeKind": ""}, {"name": "update_transaction( transaction_id: int, transaction_in: TransactionCreate, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )", "description": "Updates an existing transaction record, restricted to admin roles.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Transaction)", "db.add(txn)", "db.commit()", "db.refresh(txn)"], "search-terms": ["accounting", "transactions", "role-based access", "FastAPI endpoints", "categorized transactions", "income expenses"], "state": 2, "file_id": 14, "knowledge_revision": 43, "git_revision": "0eaae4a1e1d8149d0139ca01202c9c655fd6f5ab", "revision_history": [{"39": ""}, {"43": "0eaae4a1e1d8149d0139ca01202c9c655fd6f5ab"}], "ctags": [{"_type": "tag", "name": "delete_transaction", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^def delete_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_id: int, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "get_transaction", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^def get_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_transactions", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^def list_transactions($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), account: Optional[str] = Query(None, description=\"Filter by account\"), category: Optional[str] = Query(None, description=\"Category filter\"), from_date: Optional[date] = Query(None, description=\"From date\"), to_date: Optional[date] = Query(None, description=\"To date\"), transaction_type: Optional[str] = Query(None, description=\"'income' or 'expense'\"), skip: int = 0, limit: int = 100, current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\", \"Member\")), )"}, {"_type": "tag", "name": "record_transaction", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^def record_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_in: TransactionCreate, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^router = APIRouter(prefix=\"\\/accounting\", tags=[\"Accounting\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_transaction", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/accounting.py", "pattern": "/^def update_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_id: int, transaction_in: TransactionCreate, db: Session = Depends(get_db), current_user: User = Depends(rbac_required(\"Super Admin\", \"State Admin\", \"District Admin\", \"Branch Admin\")), )"}], "hash": "df59801f7324c40b56735e04dbe8f4f8", "format-version": 4, "code-base-name": "membership_backend", "filename": "membership_backend/src/api/accounting.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/accounting\", tags=[\"Accounting\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}