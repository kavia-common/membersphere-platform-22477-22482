{"is_source_file": true, "format": "Python (FastAPI framework)", "description": "This file contains API endpoint definitions for managing payments in a SaaS platform. It includes routes for recording payments, updating payment status, retrieving payment histories by member, subscription, or organization, aggregating payment statistics, and exporting payment data as CSV or Excel. The code uses FastAPI's routing and depends on SQLAlchemy ORM for database interactions.", "external_files": ["src.api.models", "src.api.schemas", "src.api.auth"], "external_methods": ["get_db", "PaymentCreate", "PaymentOut", "APIResponse", "User", "Subscription"], "published": ["router"], "classes": [{"name": "Payment", "description": "ORM model representing a payment record"}, {"name": "User", "description": "ORM model representing a user/member"}, {"name": "Subscription", "description": "ORM model representing a subscription"}], "methods": [{"name": "record_payment( payment_in: PaymentCreate, db: Session = Depends(get_db), )", "description": "API endpoint to record a new payment for a member subscription", "scope": "", "scopeKind": ""}, {"name": "update_payment_status( payment_id: int, new_status: str = Query(..., description=\"New status: success, failed, pending\"), db: Session = Depends(get_db) )", "description": "API endpoint to update the status of a payment", "scope": "", "scopeKind": ""}, {"name": "payment_history_member( member_id: int, db: Session = Depends(get_db), )", "description": "Retrieve payment history for a specific member", "scope": "", "scopeKind": ""}, {"name": "payment_history_subscription( subscription_id: int, db: Session = Depends(get_db) )", "description": "Retrieve payment history for a specific subscription", "scope": "", "scopeKind": ""}, {"name": "payment_history_by_org( org_id: int, db: Session = Depends(get_db), )", "description": "Retrieve all payments made by members of an organization", "scope": "", "scopeKind": ""}, {"name": "aggregate_payment_by_org( org_id: int, db: Session = Depends(get_db) )", "description": "Aggregate payment statistics for an organization", "scope": "", "scopeKind": ""}, {"name": "export_payments_csv( org_id: int, status: Optional[str] = Query(None, description=\"Filter by payment status\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), )", "description": "Export payments for an organization as CSV or XLSX", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.commit", "db.refresh", "db.query(User).filter", "db.query(Subscription).filter", "db.query(Payment).filter", "func.coalesce", "csv.DictWriter"], "search-terms": ["payments", "payment endpoints", "payment history", "payment export", "organization payments", "member payments", "subscrition payments", "payment stats"], "state": 2, "file_id": 11, "knowledge_revision": 31, "git_revision": "a0f78a1f316743ce56edb970e5db52d2e1b20bb0", "revision_history": [{"28": "a0f78a1f316743ce56edb970e5db52d2e1b20bb0"}, {"31": "a0f78a1f316743ce56edb970e5db52d2e1b20bb0"}], "ctags": [{"_type": "tag", "name": "aggregate_payment_by_org", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def aggregate_payment_by_org($/", "language": "Python", "kind": "function", "signature": "( org_id: int, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "export_payments_csv", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def export_payments_csv($/", "language": "Python", "kind": "function", "signature": "( org_id: int, status: Optional[str] = Query(None, description=\"Filter by payment status\"), format: str = Query(\"csv\", description=\"csv or xlsx\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "payment_history_by_org", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def payment_history_by_org($/", "language": "Python", "kind": "function", "signature": "( org_id: int, db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "payment_history_member", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def payment_history_member($/", "language": "Python", "kind": "function", "signature": "( member_id: int, db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "payment_history_subscription", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def payment_history_subscription($/", "language": "Python", "kind": "function", "signature": "( subscription_id: int, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "record_payment", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def record_payment($/", "language": "Python", "kind": "function", "signature": "( payment_in: PaymentCreate, db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^router = APIRouter(prefix=\"\\/payments\", tags=[\"Payments\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_payment_status", "path": "/home/kavia/workspace/code-generation/membersphere-platform-22477-22482/membership_backend/src/api/payments.py", "pattern": "/^def update_payment_status($/", "language": "Python", "kind": "function", "signature": "( payment_id: int, new_status: str = Query(..., description=\"New status: success, failed, pending\"), db: Session = Depends(get_db) )"}], "hash": "cb75705c5a9ec21de59d28a2c3818c8f", "format-version": 4, "code-base-name": "membership_backend", "filename": "membership_backend/src/api/payments.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/payments\", tags=[\"Payments\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}